// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.12.4
// source: internal/api/proto/V1/credit_card_data/credit_card_data.proto

package credit_card_data

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	CreditCardDataService_SaveCreditCardData_FullMethodName   = "/v1.credit_card_data.CreditCardDataService/SaveCreditCardData"
	CreditCardDataService_GetCreditCardData_FullMethodName    = "/v1.credit_card_data.CreditCardDataService/GetCreditCardData"
	CreditCardDataService_EditCreditCardData_FullMethodName   = "/v1.credit_card_data.CreditCardDataService/EditCreditCardData"
	CreditCardDataService_DeleteCreditCardData_FullMethodName = "/v1.credit_card_data.CreditCardDataService/DeleteCreditCardData"
	CreditCardDataService_GetAllCreditCardData_FullMethodName = "/v1.credit_card_data.CreditCardDataService/GetAllCreditCardData"
)

// CreditCardDataServiceClient is the client API for CreditCardDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CreditCardDataServiceClient interface {
	SaveCreditCardData(ctx context.Context, in *CreditCardDataRequest, opts ...grpc.CallOption) (*CreditCardDataResponse, error)
	GetCreditCardData(ctx context.Context, in *GetCreditCardDataRequest, opts ...grpc.CallOption) (*GetCreditCardDataResponse, error)
	EditCreditCardData(ctx context.Context, in *EditCreditCardDataRequest, opts ...grpc.CallOption) (*CreditCardDataResponse, error)
	DeleteCreditCardData(ctx context.Context, in *DeleteCreditCardDataRequest, opts ...grpc.CallOption) (*CreditCardDataResponse, error)
	GetAllCreditCardData(ctx context.Context, in *GetAllCreditCardDataRequest, opts ...grpc.CallOption) (*GetAllCreditCardDataResponse, error)
}

type creditCardDataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreditCardDataServiceClient(cc grpc.ClientConnInterface) CreditCardDataServiceClient {
	return &creditCardDataServiceClient{cc}
}

func (c *creditCardDataServiceClient) SaveCreditCardData(ctx context.Context, in *CreditCardDataRequest, opts ...grpc.CallOption) (*CreditCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreditCardDataResponse)
	err := c.cc.Invoke(ctx, CreditCardDataService_SaveCreditCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditCardDataServiceClient) GetCreditCardData(ctx context.Context, in *GetCreditCardDataRequest, opts ...grpc.CallOption) (*GetCreditCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCreditCardDataResponse)
	err := c.cc.Invoke(ctx, CreditCardDataService_GetCreditCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditCardDataServiceClient) EditCreditCardData(ctx context.Context, in *EditCreditCardDataRequest, opts ...grpc.CallOption) (*CreditCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreditCardDataResponse)
	err := c.cc.Invoke(ctx, CreditCardDataService_EditCreditCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditCardDataServiceClient) DeleteCreditCardData(ctx context.Context, in *DeleteCreditCardDataRequest, opts ...grpc.CallOption) (*CreditCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreditCardDataResponse)
	err := c.cc.Invoke(ctx, CreditCardDataService_DeleteCreditCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditCardDataServiceClient) GetAllCreditCardData(ctx context.Context, in *GetAllCreditCardDataRequest, opts ...grpc.CallOption) (*GetAllCreditCardDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAllCreditCardDataResponse)
	err := c.cc.Invoke(ctx, CreditCardDataService_GetAllCreditCardData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreditCardDataServiceServer is the server API for CreditCardDataService service.
// All implementations must embed UnimplementedCreditCardDataServiceServer
// for forward compatibility
type CreditCardDataServiceServer interface {
	SaveCreditCardData(context.Context, *CreditCardDataRequest) (*CreditCardDataResponse, error)
	GetCreditCardData(context.Context, *GetCreditCardDataRequest) (*GetCreditCardDataResponse, error)
	EditCreditCardData(context.Context, *EditCreditCardDataRequest) (*CreditCardDataResponse, error)
	DeleteCreditCardData(context.Context, *DeleteCreditCardDataRequest) (*CreditCardDataResponse, error)
	GetAllCreditCardData(context.Context, *GetAllCreditCardDataRequest) (*GetAllCreditCardDataResponse, error)
	mustEmbedUnimplementedCreditCardDataServiceServer()
}

// UnimplementedCreditCardDataServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCreditCardDataServiceServer struct {
}

func (UnimplementedCreditCardDataServiceServer) SaveCreditCardData(context.Context, *CreditCardDataRequest) (*CreditCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCreditCardData not implemented")
}
func (UnimplementedCreditCardDataServiceServer) GetCreditCardData(context.Context, *GetCreditCardDataRequest) (*GetCreditCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCreditCardData not implemented")
}
func (UnimplementedCreditCardDataServiceServer) EditCreditCardData(context.Context, *EditCreditCardDataRequest) (*CreditCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCreditCardData not implemented")
}
func (UnimplementedCreditCardDataServiceServer) DeleteCreditCardData(context.Context, *DeleteCreditCardDataRequest) (*CreditCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCreditCardData not implemented")
}
func (UnimplementedCreditCardDataServiceServer) GetAllCreditCardData(context.Context, *GetAllCreditCardDataRequest) (*GetAllCreditCardDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCreditCardData not implemented")
}
func (UnimplementedCreditCardDataServiceServer) mustEmbedUnimplementedCreditCardDataServiceServer() {}

// UnsafeCreditCardDataServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CreditCardDataServiceServer will
// result in compilation errors.
type UnsafeCreditCardDataServiceServer interface {
	mustEmbedUnimplementedCreditCardDataServiceServer()
}

func RegisterCreditCardDataServiceServer(s grpc.ServiceRegistrar, srv CreditCardDataServiceServer) {
	s.RegisterService(&CreditCardDataService_ServiceDesc, srv)
}

func _CreditCardDataService_SaveCreditCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreditCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditCardDataServiceServer).SaveCreditCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditCardDataService_SaveCreditCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditCardDataServiceServer).SaveCreditCardData(ctx, req.(*CreditCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditCardDataService_GetCreditCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCreditCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditCardDataServiceServer).GetCreditCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditCardDataService_GetCreditCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditCardDataServiceServer).GetCreditCardData(ctx, req.(*GetCreditCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditCardDataService_EditCreditCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditCreditCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditCardDataServiceServer).EditCreditCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditCardDataService_EditCreditCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditCardDataServiceServer).EditCreditCardData(ctx, req.(*EditCreditCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditCardDataService_DeleteCreditCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCreditCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditCardDataServiceServer).DeleteCreditCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditCardDataService_DeleteCreditCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditCardDataServiceServer).DeleteCreditCardData(ctx, req.(*DeleteCreditCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditCardDataService_GetAllCreditCardData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCreditCardDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditCardDataServiceServer).GetAllCreditCardData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditCardDataService_GetAllCreditCardData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditCardDataServiceServer).GetAllCreditCardData(ctx, req.(*GetAllCreditCardDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CreditCardDataService_ServiceDesc is the grpc.ServiceDesc for CreditCardDataService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CreditCardDataService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.credit_card_data.CreditCardDataService",
	HandlerType: (*CreditCardDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveCreditCardData",
			Handler:    _CreditCardDataService_SaveCreditCardData_Handler,
		},
		{
			MethodName: "GetCreditCardData",
			Handler:    _CreditCardDataService_GetCreditCardData_Handler,
		},
		{
			MethodName: "EditCreditCardData",
			Handler:    _CreditCardDataService_EditCreditCardData_Handler,
		},
		{
			MethodName: "DeleteCreditCardData",
			Handler:    _CreditCardDataService_DeleteCreditCardData_Handler,
		},
		{
			MethodName: "GetAllCreditCardData",
			Handler:    _CreditCardDataService_GetAllCreditCardData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/api/proto/V1/credit_card_data/credit_card_data.proto",
}
